{"version":3,"sources":["webpack:///./src/components/modal/modal.js","webpack:///./src/components/modal/useModal.js","webpack:///./src/components/link/link.js","webpack:///./src/components/formCheckbox/formCheckbox.js","webpack:///./src/components/formDescription/formDescription.js","webpack:///./src/components/formLabel/formLabel.js","webpack:///./src/components/formCheckboxGroup/formCheckboxGroup.js","webpack:///./src/components/formInput/formInput.js","webpack:///./src/assets/svgs/reset.js","webpack:///./src/components/formPill/formPill.js","webpack:///./src/components/formPillGroup/formPillGroup.js","webpack:///./src/components/formRadio/formRadio.js","webpack:///./src/components/formRadioGroup/formRadioGroup.js","webpack:///./src/assets/svgs/search.js","webpack:///./src/components/formSearch/formSearch.js","webpack:///./src/components/formError/formError.js","webpack:///./src/components/formSelect/formSelect.js","webpack:///./src/components/formTextarea/formTextarea.js","webpack:///./src/components/formTextbox/formTextbox.js","webpack:///./src/components/formToggle/formToggle.js","webpack:///./src/components/drawerControls/drawerControls.js","webpack:///./src/pages/index.js"],"names":["Modal","isModalShowing","hideModal","ReactDOM","createPortal","Fragment","className","aria-modal","aria-hidden","tabIndex","role","type","handleClick","data-dismiss","aria-label","scheme","text","document","getElementById","useModal","useState","setIsModalShowing","toggleModal","Link","props","targetShow","href","linkUrl","target","targetTarget","rel","ref","defaultProps","FormCheckbox","checked","id","name","defaultChecked","htmlFor","FormDescription","FormLabel","FormCheckboxGroup","label","description","children","FormInput","SVG","viewBox","d","FormPill","value","FormPillGroup","FormRadio","FormRadioGroup","fillRule","FormSearch","placeholder","FormError","FormSelect","error","FormTextarea","style","height","FormTextbox","FormToggle","Drawer","isDrawerShowing","position","hideDrawer","IndexPage","useDrawer","toggleDrawer","title","theme","width"],"mappings":"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","file":"component---src-pages-index-js-69c14759cdd2bb09a5c4.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from \"../../components/button/button\"\nimport ButtonGroup from \"../../components/buttonGroup/buttonGroup\"\nimport Icon from \"../../components/icon/icon\"\n\nimport SvgClose from \"../../assets/svgs/close\";\n\n// MODAL\n// NOTE - Tell createPortal which DOM element to place the modal into (e.g. \"theme\")\n\nconst Modal = ({ isModalShowing, hideModal }) => isModalShowing ? ReactDOM.createPortal(\n    <React.Fragment>\n        <div className=\"modal-mask\"/>\n        <div className=\"modal-con\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n            <div className=\"modal\">\n                <div className=\"modal-header\">\n                    <div>Modal Header</div>\n                    <Icon type=\"small modal-close-button\" handleClick={hideModal} data-dismiss=\"modal\" aria-label=\"Close\" role=\"button\">\n                        <SvgClose />\n                    </Icon>\n                </div>\n                <div className=\"modal-content\">\n\n                    <div>\n                        <h1>Tooks birds precedes contains laid start.</h1>\n                        <p>I will take the Ring to Mordor. Shrink interesting until devouring inside launching Isildur's? Sodding funeral fit water mustn't Smeagol.</p>\n                        <h2>Troubled forged ablaze bird world's source Arwen.</h2>\n                        <p>Don't you leave him, Samwise Gamgee. Horses slain unexpected been fair point worms who Elfs agents? Perish sauteed reforge Fenmarch much? Dwalin devil raising we'd draining defend!</p>\n                        <h3>Required Meriadoc warts spoke committees filth hearth?</h3>\n                        <p>Water Treebeard suspect northeast day's key pursuit! Suffer everyday retake Ring force kitchen cooking neck raw. Forked Smeagol's pillage sowing tale binding. Today is my 111th birthday!</p>\n                        <ul>\n                            <li>Gollum's!</li>\n                            <li>Boromir's.</li>\n                            <li>Elessar.</li>\n                            <li>Bifur.</li>\n                            <li>Lower.</li>\n                        </ul>\n                        <ul>\n                            <li>Forebearers favorite gather Wizards halls.</li>\n                            <li>Vagabond tempted Thorin promised pace wager.</li>\n                            <li>Greed toss no mindless number language Brego ready surety orders?</li>\n                            <li>Rises locking fried tested Radagast the Brown.</li>\n                            <li>Dragged defeats nothing's distance hungry Bar-hrum courage.</li>\n                        </ul>\n                        <h3>Mind brats possible Gamgee addled skin-changer ruby.</h3>\n                        <p>Witch-king machine liquor escaped smallest. Grond horror wide distract fruity collared defenses. Do not take me for some conjurer of cheap tricks. Generous permitted unmade wandering Tooks concealed perfected.</p>\n\n                        <h1>Tooks birds precedes contains laid start.</h1>\n                        <p>I will take the Ring to Mordor. Shrink interesting until devouring inside launching Isildur's? Sodding funeral fit water mustn't Smeagol.</p>\n                        <h2>Troubled forged ablaze bird world's source Arwen.</h2>\n                        <p>Don't you leave him, Samwise Gamgee. Horses slain unexpected been fair point worms who Elfs agents? Perish sauteed reforge Fenmarch much? Dwalin devil raising we'd draining defend!</p>\n                        <h3>Required Meriadoc warts spoke committees filth hearth?</h3>\n                        <p>Water Treebeard suspect northeast day's key pursuit! Suffer everyday retake Ring force kitchen cooking neck raw. Forked Smeagol's pillage sowing tale binding. Today is my 111th birthday!</p>\n                        <ul>\n                            <li>Gollum's!</li>\n                            <li>Boromir's.</li>\n                            <li>Elessar.</li>\n                            <li>Bifur.</li>\n                            <li>Lower.</li>\n                        </ul>\n                        <ul>\n                            <li>Forebearers favorite gather Wizards halls.</li>\n                            <li>Vagabond tempted Thorin promised pace wager.</li>\n                            <li>Greed toss no mindless number language Brego ready surety orders?</li>\n                            <li>Rises locking fried tested Radagast the Brown.</li>\n                            <li>Dragged defeats nothing's distance hungry Bar-hrum courage.</li>\n                        </ul>\n                        <h3>Mind brats possible Gamgee addled skin-changer ruby.</h3>\n                        <p>Witch-king machine liquor escaped smallest. Grond horror wide distract fruity collared defenses. Do not take me for some conjurer of cheap tricks. Generous permitted unmade wandering Tooks concealed perfected.</p>\n                    </div>\n\n                </div>\n                <div className=\"modal-footer\">\n                    <ButtonGroup\n                        scheme = 'm-button-group-right'\n                    >\n                        <Button \n                            aria-label=\"Cancel\" \n                            className=\"m-button\" \n                            data-dismiss=\"modal\" \n                            handleClick={hideModal}\n                            scheme=\"m-button-secondary\"\n                            text=\"Cancel\"\n                        >\n                        </Button>\n                        <Button \n                            aria-label=\"Apply\" \n                            className=\"m-button\" \n                            data-dismiss=\"modal\" \n                            handleClick={hideModal}\n                            scheme=\"m-button-primary theme-primary-color-background\"\n                            text=\"Apply\"\n                        >\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    </React.Fragment>, document.getElementById(\"theme\")\n) : null;\n\nexport default Modal;","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isModalShowing, setIsModalShowing] = useState(false);\n\n  function toggleModal() {\n    setIsModalShowing(!isModalShowing);\n  }\n\n  return {\n    isModalShowing,\n    toggleModal,\n  }\n};\n\nexport default useModal;","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// LINK\nconst Link = (props) => {\n    return (\n        props.targetShow ? (\n            <a className={props.scheme} href={ props.linkUrl } target={ props.targetTarget } rel=\"noopener noreferrer\">{ props.text }</a>\n        ) : (\n            <a className={props.scheme} ref={ props.linkUrl } rel=\"noopener noreferrer\">{ props.text }</a>\n        )\n    );\n}\n\nLink.propTypes = {\n    linkUrl: PropTypes.string,\n    scheme: PropTypes.string, \n    targetShow: PropTypes.bool, \n    targetTarget: PropTypes.string,\n    text: PropTypes.string,\n};\n  \nLink.defaultProps = {\n    scheme: '',\n    targetShow: false,\n    targetTarget: '_blank',\n};\n\nexport default Link","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM CHECKBOX\nconst FormCheckbox = (props) => {\n    return (\n        <div className=\"m-form-checkbox\">\n            { props.checked ? (\n                <input type=\"checkbox\" id={props.id} name={props.name} defaultChecked />\n            ) : (\n                <input type=\"checkbox\" id={props.id} name={props.name} />\n            )}\n            <label htmlFor={props.id}>{props.text}</label>\n        </div>\n    );\n}\n\nFormCheckbox.propTypes = {\n    checked: PropTypes.bool,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    text: PropTypes.string,\n};\n  \nexport default FormCheckbox","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM LABEL\nconst FormDescription = (props) => {\n    return (\n        <div className=\"m-form-description\">{ props.text }</div>\n    );\n}\n\nFormDescription.propTypes = {\n    text: PropTypes.string,\n};\n  \nexport default FormDescription","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM LABEL\nconst FormLabel = (props) => {\n    return (\n        <label>{ props.text }</label>\n    );\n}\n\nFormLabel.propTypes = {\n    text: PropTypes.string,\n};\n  \nexport default FormLabel","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// FORM RADIO\nconst FormCheckboxGroup = (props) => {\n    return (\n        <div className=\"m-form-checkbox-group\">\n            <FormLabel text={ props.label } />\n            <FormDescription text={ props.description} />\n            { props.children }\n        </div>\n    );\n}\n\nFormCheckboxGroup.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string\n};\n  \nexport default FormCheckboxGroup","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM INPUT\nconst FormInput = (props) => {\n    return (\n        <div\n            className={`m-form-input ${ props.className }`}\n        >\n            { props.children }\n        </div>\n    );\n}\n\nFormInput.propTypes = {\n    className: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n    className: '',\n};\n\nexport default FormInput","import React from 'react'\n\nconst SVG = (props) => {\n    return (\n        <svg viewBox=\"0 0 32 32\"  className={ props.className }>\n            <path d=\"M25.9 6.1a14 14 0 100 19.8 14 14 0 000-19.8zM21 19.54A1 1 0 0121 21a1 1 0 01-.71.29 1 1 0 01-.7-.29L16 17.41 12.46 21a1 1 0 01-.7.29 1 1 0 01-.71-.29 1 1 0 010-1.41L14.59 16l-3.54-3.54a1 1 0 011.41-1.41L16 14.59l3.54-3.54A1 1 0 0121 12.46L17.41 16z\" />\n        </svg>\n    );\n}\n\nexport default SVG","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport SvgReset from \"../../assets/svgs/reset\";\n\n// FORM PILL\nconst FormPill = (props) => {\n    return (\n        <div className=\"m-form-pill\">\n            <div className=\"con\">\n                <div className=\"value\">{ props.value }</div>\n                <SvgReset />\n            </div>\n        </div>\n    );\n}\n\nFormPill.propTypes = {\n    value: PropTypes.string,\n};\n  \nexport default FormPill","import React from 'react'\n\n// FORM PILL GROUP\nconst FormPillGroup = (props) => {\n    return (\n        <div className=\"m-form-pill-group\">\n            { props.children }\n        </div>\n    );\n}\n  \nexport default FormPillGroup","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM RADIO\nconst FormRadio = (props) => {\n    return (\n        <div className=\"m-form-radio\">\n            { props.checked ? (\n                <input type=\"radio\" id={props.id} name={props.name} defaultChecked />\n            ) : (\n                <input type=\"radio\" id={props.id} name={props.name} />\n            )}\n            <label htmlFor={props.id}>{props.text}</label>\n        </div>\n    );\n}\n\nFormRadio.propTypes = {\n    checked: PropTypes.bool,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    text: PropTypes.string,\n};\n  \nexport default FormRadio","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// FORM RADIO\nconst FormRadioGroup = (props) => {\n    return (\n        <div className=\"m-form-radio-group\">\n            <FormLabel text={ props.label } />\n            <FormDescription text={ props.description} />\n            { props.children }\n        </div>\n    );\n}\n\nFormRadioGroup.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string\n};\n  \nexport default FormRadioGroup","import React from 'react'\n\nconst SVG = (props) => {\n    return (\n        <svg viewBox=\"0 0 14 14\" className={ props.className }>\n            <path d=\"M9.747 7.817c.572-.8.905-1.762.905-2.796C10.652 2.252 8.262 0 5.326 0 2.39 0 0 2.252 0 5.02c0 2.769 2.39 5.021 5.326 5.021 1.12 0 2.159-.327 3.017-.885l4.245 3.984L14 11.809 9.747 7.817zm-4.42.814c-2.108 0-3.823-1.616-3.823-3.602 0-1.987 1.715-3.603 3.822-3.603s3.822 1.616 3.822 3.603c0 1.986-1.715 3.602-3.822 3.602z\" fillRule=\"nonzero\"/>\n        </svg>\n    );\n}\n\nexport default SVG","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport SvgSearch from \"../../assets/svgs/search\";\nimport SvgReset from \"../../assets/svgs/reset\";\n\n// FORM SEARCH\nconst FormSearch = (props) => {\n    return (\n        <div className=\"m-form-search\">\n            <SvgSearch />\n            <input type=\"text\" placeholder={props.placeholder} />\n            <SvgReset className=\"reset theme-primary-color-fill-hover\" />\n        </div>\n    );\n}\n\nFormSearch.propTypes = {\n    placeholder: PropTypes.string,\n};\n  \nexport default FormSearch","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n// FORM ERROR\nconst FormError = (props) => {\n    return (\n        <div className={`m-form-error ${ props.scheme }`}>{ props.text }</div>\n    );\n}\n\nFormError.propTypes = {\n    scheme: PropTypes.string,\n    text: PropTypes.string,\n};\n  \nexport default FormError","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormError from \"../formError/formError\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// SELECT\nconst FormSelect = (props) => {\n    return (\n        <div className=\"m-form-select\">\n            <FormLabel text={ props.label } />\n            <select>\n                {props.children}\n            </select>\n            <FormError text={ props.error } />\n            <FormDescription text={ props.description } />\n        </div>\n    );\n}\n\nFormSelect.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string,\n    error: PropTypes.string,\n};\n  \nexport default FormSelect","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormError from \"../formError/formError\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// FORM TEXTAREA\nconst FormTextarea = (props) => {\n    return (\n        <div className=\"m-form-textarea\">\n            <FormLabel text={ props.label } />\n            <textarea style={{height: props.height}} />\n            <FormError text={ props.error } />\n            <FormDescription text={ props.description } />\n        </div>\n    );\n}\n\nFormTextarea.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string,\n    height: PropTypes.any,\n    error: PropTypes.string,\n};\n  \nexport default FormTextarea","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormError from \"../formError/formError\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// FORM TEXTBOX\nconst FormTextbox = (props) => {\n    return (\n        <div className=\"m-form-textbox\">\n            <FormLabel text={ props.label } />\n            <input type=\"text\" />\n            <FormError text={ props.error} />\n            <FormDescription text={ props.description} />\n        </div>\n    );\n}\n\nFormTextbox.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string,\n    error: PropTypes.string,\n};\n  \nexport default FormTextbox","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport FormDescription from \"../formDescription/formDescription\"\nimport FormLabel from \"../formLabel/formLabel\"\n\n// FORM TOGGLE\nconst FormToggle = (props) => {\n    return (\n        <div className=\"m-form-toggle\">\n            <div className=\"control\">           \n                <FormLabel text={ props.label } />\n                <label className=\"switch\">\n                    <input type=\"checkbox\"/>\n                    <span className=\"slider round\"></span>\n                </label>\n            </div>\n            <FormDescription text={ props.description} />\n        </div>\n    );\n}\n\nFormToggle.propTypes = {\n    label: PropTypes.string,\n    description: PropTypes.string,\n    error: PropTypes.string,\n};\n  \nexport default FormToggle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\n\nimport Button from \"../button/button\"\nimport ButtonGroup from \"../buttonGroup/buttonGroup\"\n\nimport Link from \"../link/link\"\n\nimport FormCheckbox from \"../formCheckbox/formCheckbox\"\nimport FormCheckboxGroup from \"../formCheckboxGroup/formCheckboxGroup\"\nimport FormInput from \"../formInput/formInput\"\nimport FormPill from \"../formPill/formPill\"\nimport FormPillGroup from \"../formPillGroup/formPillGroup\"\nimport FormRadio from \"../formRadio/formRadio\"\nimport FormRadioGroup from \"../formRadioGroup/formRadioGroup\"\nimport FormSearch from \"../formSearch/formSearch\"\nimport FormSelect from \"../formSelect/formSelect\"\nimport FormTextarea from \"../formTextarea/formTextarea\"\nimport FormTextbox from \"../formTextbox/formTextbox\"\nimport FormToggle from \"../formToggle/formToggle\"\n\nimport Icon from \"../icon/icon\"\nimport SvgClose from \"../../assets/svgs/close\";\n\n// DRAER - NOTIFICATION\n// NOTE - Tell createPortal which DOM element to place the modal into (e.g. \"theme\")\nconst Drawer = (props) => props.isDrawerShowing ? ReactDOM.createPortal(\n    <React.Fragment>\n        <div className=\"drawer-mask\"/>\n        <div className=\"drawer-con\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n            <div className={`drawer ${ props.position }`}>\n                <div className=\"drawer-header\">\n                    <div>Controls</div>\n                    <Icon className=\"drawer-close-button\" type=\"small\" handleClick={props.hideDrawer} data-dismiss=\"drawer\" aria-label=\"Close\" role=\"button\">\n                        <SvgClose />\n                    </Icon>\n                </div>\n                <div className=\"drawer-content\">\n                    \n                    <FormInput>\n                        <FormTextbox\n                            label = \"texbox\"\n                            description = \"This is a textbox description\"\n                            error = \"This is a textbox error\"\n                        >\n                        </FormTextbox>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormTextarea\n                            label = \"textarea\"\n                            description = \"This is a textarea description\"\n                            height= '100px'\n                            error = \"This is a textarea error\"\n                        >\n                        </FormTextarea>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormSelect\n                            label = \"select\"\n                            description = \"This is a select description\"\n                            error = \"This is a select error\"\n                        >\n                            <option value=\"gandalf\">Gandalf</option>\n                            <option value=\"aragorn\">Aragorn</option>\n                            <option value=\"Frodo\">Frodo</option>\n                            <option value=\"samwise\">Samwise</option>\n                        </FormSelect>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormRadioGroup\n                            label = \"radio\"\n                            description = \"This is a radio description\"\n                        >\n                            <FormRadio name=\"monsters\" id=\"unique-id-orcs\" text=\"Orcs\" checked={true} />\n                            <FormRadio name=\"monsters\" id=\"unique-id-nazgul\" text=\"Nazgul\" />\n                            <FormRadio name=\"monsters\" id=\"unique-id-goblins\" text=\"Goblins\" />\n                        </FormRadioGroup>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormCheckboxGroup\n                            label = \"checkbox\"\n                            description = \"This is a checkbox description\"\n                        >\n                            <FormCheckbox name=\"heros\" id=\"unique-id-eagles\" text=\"Eagles\" checked={true} />\n                            <FormCheckbox name=\"heros\" id=\"unique-id-bombadil\" text=\"Bombadil\" />\n                            <FormCheckbox name=\"heros\" id=\"unique-id-beorn\" text=\"Beorn\" />\n                        </FormCheckboxGroup>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormToggle\n                            label = \"toggle\"\n                            description = \"This is a toggle description\"\n                        >\n                        </FormToggle>\n                    </FormInput>\n\n                    <FormInput>\n                        <FormSearch\n                            placeholder = \"Search\"\n                        >\n                        </FormSearch>\n                    </FormInput>\n\n                    <FormPillGroup>\n                        <FormPill value = \"Pill\" />\n                        <FormPill value = \"This is another pill\" />\n                        <FormPill value = \"This is a third pill\" />\n                    </FormPillGroup>\n\n                    <Link \n                        text=\"This is a link\" />\n                    <br/>\n                    <Link \n                        text=\"This is a link underline\" \n                        scheme=\"underline\"\n                    />\n\n                </div>\n                <div className=\"drawer-footer\">\n                    <ButtonGroup\n                        scheme=\"m-button-group-center-full\"\n                    >\n                        <Button \n                            aria-label=\"Cancel\" \n                            className=\"m-button\" \n                            scheme=\"m-button-secondary\"\n                            text=\"Cancel\"\n                        >\n                        </Button>\n                        <Button \n                            aria-label=\"Save\" \n                            className=\"m-button\" \n                            scheme=\"m-button-primary theme-primary-color-background\"\n                            text=\"Save\"\n                        >\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    </React.Fragment>, document.getElementById(\"theme\")\n) : null;\n\nDrawer.propTypes = {\n    isDrawerShowing: PropTypes.bool,\n    hideDrawer: PropTypes.func,\n    position: PropTypes.string,\n};\n  \nDrawer.defaultProps = {\n    position: 'right',\n};\n\nexport default Drawer;","import React from \"react\"\nimport { useState } from 'react';\n\nimport \"../styles/styles.scss\"\n\nimport Layout from \"../template/layout/layout\"\nimport Header from \"../template/header/header\"\n\nimport Button from \"../components/button/button\"\nimport Card from \"../components/card/card\"\nimport CardGroup from \"../components/cardGroup/cardGroup\"\nimport Empty from \"../components/empty/empty\"\nimport Loader from \"../components/loader/loader\"\n\nimport Modal from \"../components/modal/modal\"\nimport useModal from \"../components/modal/useModal\"\n\nimport DrawerNotification from \"../components/drawerControls/drawerControls\"\nimport useDrawer from \"../components/drawer/useDrawer\"\n\n// INDEX\nconst IndexPage = (props) => {\n    // Theme\n    const toggleTheme = () => { \n        let theme = document.getElementById(\"theme\");\n        if(theme.className === \"darkTheme\") {\n            theme.className = \"lightTheme\";\n        } else {\n            theme.className = \"darkTheme\";\n        }\n    };\n\n    // Modal\n    const {isModalShowing, toggleModal} = useModal();\n\n    // Drawer\n    const {isDrawerShowing, toggleDrawer} = useDrawer();\n\n    return (\n        <Layout>\n\n            <Modal isModalShowing={isModalShowing} hideModal={toggleModal} />\n\n            <DrawerNotification \n                isDrawerShowing={isDrawerShowing} \n                hideDrawer={toggleDrawer}\n                position=\"left\"\n            />\n\n            <Header>\n                <div className=\"title\">DASHBOARD</div>\n            </Header>\n\n            <section>\n                <CardGroup scheme=\"m-card-group-3\">\n                    <Card title = \"Theme\">\n                        <Button\n                            text = 'THEME SWITCH'\n                            handleClick = {toggleTheme}\n                            scheme = \"m-button-secondary theme-secondary-color-background\"\n                            tabIndex = \"0\"\n                            width = \"200\"\n                        >\n                        </Button>\n                    </Card>\n                    <Card title = \"Modal\">\n                        <Button\n                            text = 'SHOW MODAL'\n                            handleClick={toggleModal}\n                            scheme = \"m-button-secondary theme-secondary-color-background\"\n                            tabIndex = \"0\"\n                            width = \"200\"\n                            >\n                        </Button>\n                    </Card>\n                    <Card title = \"Controls\">\n                        <Button\n                            text = 'CONTROLS'\n                            handleClick = {toggleDrawer}\n                            scheme = \"m-button-secondary theme-secondary-color-background\"\n                            tabIndex = \"0\"\n                            width = \"200\"\n                        >\n                        </Button>\n                    </Card>\n                    <Card title = \"Card Title\">\n                        <h1>This is an H1</h1>\n                        <p>I will take the Ring to Mordor. Shrink interesting until devouring inside launching Isildur's? Sodding funeral fit water mustn't Smeagol.</p>\n                        <h2>This is an H2</h2>\n                        <p>Don't you leave him, Samwise Gamgee. Horses slain unexpected been fair point worms who Elfs agents? Perish sauteed reforge Fenmarch much? Dwalin devil raising we'd draining defend!</p>\n                        <h3>This is an H3</h3>\n                        <p>Water Treebeard suspect northeast day's key pursuit! Suffer everyday retake Ring force kitchen cooking neck raw. Forked Smeagol's pillage sowing tale binding. Today is my 111th birthday!</p>\n                        <ul className=\"default\">\n                            <li>Gollum's!</li>\n                            <li>Boromir's.</li>\n                            <li>Elessar.</li>\n                            <li>Bifur.</li>\n                            <li>Lower.</li>\n                        </ul>\n                    </Card>\n                    <Card>\n                       This is a card without a title.\n                    </Card>\n                    <Card title = \"Card Title\">\n                        Card with a title\n                    </Card>\n                    <Card>\n                        <Loader />\n                    </Card>\n                    <Card>\n                        <Empty \n                            text = \"This is the empty message, promote an action, extra text to see it wrap.\"\n                        />\n                    </Card>\n                </CardGroup>\n            </section>\n        </Layout>\n    );\n}\n\nexport default IndexPage"],"sourceRoot":""}